name: Deploy portfolio site
run-name: lekan pon this
on: 
    push:
        branches:
            - main
jobs: 
              build-and-upload:
                runs-on: ubuntu-latest
                steps:
                  - name: download project
                    uses: actions/checkout@v3
                  - name: install node version 18
                    uses: actions/setup-node@v3.8.1
                  - name: install yarn
                    uses: mskelton/setup-yarn@v1.4.0
                  - name: Setup Pages
                    uses: actions/configure-pages@v3
                    with:
                        static_site_generator: next
                  - name: Restore cache 
                    uses: actions/cache@v3
                    with: 
                      path: |
                        .next/cache
                    # Generate a new cache whenever packages or source files change.
                      key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
                    # If source files changed but packages didn't, rebuild from a prior cache.
                      restore-keys: |
                        ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-
                  - name: install dependencies
                    run: yarn install --frozen-lockfile
                  - name: build project
                    run: yarn build
                  - name: upload artifact
                    uses: actions/upload-artifact@v3
                    with:
                      name: portfolio_v2
                      path: build
              download-and-deploy:
                needs: [build-and-upload]
                runs-on: ubuntu-latest
                steps:
                  - name: get artifact
                    uses: actions/download-artifact@v3
                    with:
                      name: portfolio_v2
                      path: build
                  - name: Listing deployable files
                    run: ls
                  - name: deploy artifact
                    run: echo "Deploying Alaf consult web page"
                  - name: Deploy to GitHub Pages
                    id: deployment
                    uses: actions/deploy-pages@v2
            